name: New GameCI test 🎮

on: push

jobs:
  testRunner:
      name: Test in ${{ matrix.testMode }} ✨
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
        matrix:
          testMode:
            - EditMode
            - PlayMode
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Create LFS file list
          run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

        - name: Restore LFS cache
          uses: actions/cache@v4
          id: lfs-cache
          with:
            path: .git/lfs
            key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

        - name: Git LFS Pull
          run: |
            git lfs pull
            git add .
            git reset --hard

        - name: Restore Library cache
          uses: actions/cache@v4
          with:
            path: Library
            key: Library-test-project-${{ matrix.targetPlatform }}
            restore-keys: |
              Library-test-project-
              Library-
              
        - name: Run tests
          uses: game-ci/unity-test-runner@v4
          id: testRunner
          env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
            UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
            UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          with:
            testMode: ${{ matrix.testMode }}
            projectPath: MOBA
            githubToken: ${{ secrets.GITHUB_TOKEN }}

        - uses: actions/upload-artifact@v4
          with:
            name: Test-results-${{ matrix.testMode }}
            path: ${{ steps.testRunner.outputs.artifactsPath }}

  buildWindows:
      needs: testRunner
      name: Build for Windows 🖥️
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Create LFS file list
          run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

        - name: Restore LFS cache
          uses: actions/cache@v4
          id: lfs-cache
          with:
            path: .git/lfs
            key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

        - name: Git LFS Pull
          run: |
            git lfs pull
            git add .
            git reset --hard

        - name: Restore Library cache
          uses: actions/cache@v4
          with:
            path: Library
            key: Library-build-StandaloneWindows
            restore-keys: |
              Library-build-
              Library-

        - uses: game-ci/unity-builder@v4
          env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
            UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
            UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          with:
            targetPlatform: StandaloneWindows
            projectPath: MOBA

        - uses: actions/upload-artifact@v4
          with:
            name: build-StandaloneWindows
            path: build/StandaloneWindows


  buildAndroid:
      needs: testRunner
      name: Build for Android 📱
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Create LFS file list
          run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

        - name: Restore LFS cache
          uses: actions/cache@v4
          id: lfs-cache
          with:
            path: .git/lfs
            key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

        - name: Git LFS Pull
          run: |
            git lfs pull
            git add .
            git reset --hard

        - name: Restore Library cache
          uses: actions/cache@v4
          with:
            path: Library
            key: Library-build-Android
            restore-keys: |
              Library-build-
              Library-

        - uses: game-ci/unity-builder@v4
          env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
            UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
            UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          with:
            targetPlatform: Android
            projectPath: MOBA

        - uses: actions/upload-artifact@v4
          with:
            name: build-Android
            path: build/Android
